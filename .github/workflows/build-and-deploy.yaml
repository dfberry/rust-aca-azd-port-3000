name: build-and-deploy

on:
  workflow_dispatch:
  push:
    branches: 
      [ main ]

permissions:
  id-token: write
  contents: read

env:
  AZURE_CONTAINER_APP_NAME: ${{ secrets.AZURE_CONTAINER_APP_NAME }}
  AZURE_RESOURCE_GROUP_NAME: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
  AZURE_CONTAINER_REGISTRY_LOGIN_SERVER: ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}
  AZURE_CONTAINER_REGISTRY_USERNAME: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }}
  AZURE_CONTAINER_REGISTRY_PASSWORD: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}
  IMAGE_NAME: 'mycontainerapp'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Verify required secrets are set
        run: |
          missing=0

          # Function to check if a variable is empty or equals its own name.
          check_var() {
            var_value="$1"
            var_name="$2"
            if [ -z "$var_value" ] || [ "$var_value" = "$var_name" ]; then
              echo "Error: Missing or invalid value for $var_name"
              missing=1
            else
              echo "$var_name is set with length: ${#var_value}"
            fi
          }

          check_var "$AZURE_CONTAINER_APP_NAME" "AZURE_CONTAINER_APP_NAME"
          check_var "$AZURE_RESOURCE_GROUP_NAME" "AZURE_RESOURCE_GROUP_NAME"
          check_var "$AZURE_CONTAINER_REGISTRY_LOGIN_SERVER" "AZURE_CONTAINER_REGISTRY_LOGIN_SERVER"
          check_var "$AZURE_CONTAINER_REGISTRY_USERNAME" "AZURE_CONTAINER_REGISTRY_USERNAME"
          check_var "$AZURE_CONTAINER_REGISTRY_PASSWORD" "AZURE_CONTAINER_REGISTRY_PASSWORD"
          check_var "$IMAGE_NAME" "IMAGE_NAME"

          if [ $missing -ne 0 ]; then
            echo "One or more required secrets are missing or invalid. Exiting."
            exit 1
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v2
        with:
          login-server: $AZURE_CONTAINER_REGISTRY_LOGIN_SERVER
          username: $AZURE_CONTAINER_REGISTRY_USERNAME
          password: $AZURE_CONTAINER_REGISTRY_PASSWORD

      - name: Verify Docker login
        run: docker info

      - name: Build and push container image to Azure Container Registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{ env.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          file: ./Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to containerapp
        uses: azure/cli@v2
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp registry set -n $AZURE_CONTAINER_APP_NAME -g $AZURE_RESOURCE_GROUP_NAME --server $AZURE_CONTAINER_REGISTRY_LOGIN_SERVER --username $AZURE_CONTAINER_REGISTRY_USERNAME --password $AZURE_CONTAINER_REGISTRY_PASSWORD
            az containerapp update -n $AZURE_CONTAINER_APP_NAME -g $AZURE_RESOURCE_GROUP_NAME --image $AZURE_CONTAINER_REGISTRY_LOGIN_SERVER/$IMAGE_NAME:${{ github.sha }}